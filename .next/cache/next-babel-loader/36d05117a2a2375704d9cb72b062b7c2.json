{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _objectDestructuringEmpty from \"@babel/runtime-corejs2/helpers/esm/objectDestructuringEmpty\";\nvar _jsxFileName = \"/Users/ronaldmutebi/Desktop/Desktop/bench/react-hooks-trials/src/Speakers.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useContext, useReducer } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../static/site.css\";\nimport { Header } from \"../src/Header\";\nimport { Menu } from \"../src/Menu\";\nimport SpeakerData from \"./SpeakerData\";\nimport SpeakerDetail from \"./SpeakerDetail\";\nimport { ConfigContext } from \"./App\";\n\nvar Speakers = function Speakers(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  var _useState = useState(true),\n      speakingSaturday = _useState[0],\n      setSpeakingSaturday = _useState[1];\n\n  var _useState2 = useState(true),\n      speakingSunday = _useState2[0],\n      setSpeakingSunday = _useState2[1]; // const [speakerList, setSpeakerList] = useState([]);\n\n\n  var _useReducer = useReducer(speakersReducer, []),\n      speakerList = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  var _useState3 = useState(true),\n      isLoading = _useState3[0],\n      setIsLoading = _useState3[1];\n\n  var context = useContext(ConfigContext);\n\n  function speakersReducer(state, action) {\n    function updateFavorite(favoriteValue) {\n      return state.map(function (item, index) {\n        if (item.id == action.sessionId) {\n          item.favorite = favoriteValue;\n          return item;\n        }\n      });\n    }\n\n    switch (action.type) {\n      case \"setSpeakerList\":\n        {\n          return action.data;\n        }\n\n      case \"favorite\":\n        return updateFavorite(true);\n\n      case \"unfavorite\":\n        return updateFavorite(false);\n\n      default:\n        return state;\n    }\n  }\n\n  useEffect(function () {\n    setIsLoading(true);\n    new _Promise(function (resolve) {\n      setTimeout(function () {\n        resolve();\n      }, 1000);\n    }).then(function () {\n      setIsLoading(false);\n      var speakerListServerFilter = SpeakerData.filter(function (_ref2) {\n        var sat = _ref2.sat,\n            sun = _ref2.sun;\n        return speakingSaturday && sat || speakingSunday && sun;\n      }); // setSpeakerList(speakerListServerFilter);\n\n      dispatch({\n        type: \"setSpeakerList\",\n        data: speakerListServerFilter\n      });\n    });\n    return function () {\n      console.log(\"cleanup\");\n    };\n  }, []); // [speakingSunday, speakingSaturday]);\n\n  var handleChangeSaturday = function handleChangeSaturday() {\n    setSpeakingSaturday(!speakingSaturday);\n  };\n\n  var speakerListFiltered = isLoading ? [] : speakerList.filter(function (_ref3) {\n    var sat = _ref3.sat,\n        sun = _ref3.sun;\n    return speakingSaturday && sat || speakingSunday && sun;\n  }).sort(function (a, b) {\n    if (a.firstName < b.firstName) {\n      return -1;\n    }\n\n    if (a.firstName > b.firstName) {\n      return 1;\n    }\n\n    return 0;\n  });\n\n  var handleChangeSunday = function handleChangeSunday() {\n    setSpeakingSunday(!speakingSunday);\n  };\n\n  var heartFavoriteHandler = function heartFavoriteHandler(e, favoriteValue) {\n    e.preventDefault();\n    debugger;\n\n    var sessionId = _parseInt(e.target.attributes[\"data-sessionid\"].value);\n\n    setSpeakerList(speakerList.map(function (item) {\n      if (item.id === sessionId) {\n        item.favorite = favoriteValue;\n        return item;\n      }\n\n      return item;\n    })); //console.log(\"changing session favorte to \" + favoriteValue);\n  };\n\n  if (isLoading) return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Loading...\");\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), __jsx(Menu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"btn-toolbar  margintopbottom5 checkbox-bigger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, context.showSpeakerSpeakingDays === false ? null : __jsx(\"div\", {\n    className: \"hide\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"form-check-inline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    className: \"form-check-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"checkbox\",\n    className: \"form-check-input\",\n    onChange: handleChangeSaturday,\n    checked: speakingSaturday,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }), \"Saturday Speakers\")), __jsx(\"div\", {\n    className: \"form-check-inline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    className: \"form-check-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"checkbox\",\n    className: \"form-check-input\",\n    onChange: handleChangeSunday,\n    checked: speakingSunday,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }), \"Sunday Speakers\")))), __jsx(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"card-deck\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, speakerListFiltered.map(function (_ref4) {\n    var id = _ref4.id,\n        firstName = _ref4.firstName,\n        lastName = _ref4.lastName,\n        bio = _ref4.bio,\n        favorite = _ref4.favorite;\n    return __jsx(SpeakerDetail, {\n      key: id,\n      id: id,\n      favorite: favorite,\n      onHeartFavoriteHandler: heartFavoriteHandler,\n      firstName: firstName,\n      lastName: lastName,\n      bio: bio,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    });\n  })))));\n};\n\nexport default Speakers;","map":{"version":3,"sources":["/Users/ronaldmutebi/Desktop/Desktop/bench/react-hooks-trials/src/Speakers.js"],"names":["React","useState","useEffect","useContext","useReducer","Header","Menu","SpeakerData","SpeakerDetail","ConfigContext","Speakers","speakingSaturday","setSpeakingSaturday","speakingSunday","setSpeakingSunday","speakersReducer","speakerList","dispatch","isLoading","setIsLoading","context","state","action","updateFavorite","favoriteValue","map","item","index","id","sessionId","favorite","type","data","resolve","setTimeout","then","speakerListServerFilter","filter","sat","sun","console","log","handleChangeSaturday","speakerListFiltered","sort","a","b","firstName","handleChangeSunday","heartFavoriteHandler","e","preventDefault","target","attributes","value","setSpeakerList","showSpeakerSpeakingDays","lastName","bio"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext, useReducer } from \"react\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../static/site.css\";\nimport { Header } from \"../src/Header\";\nimport { Menu } from \"../src/Menu\";\nimport SpeakerData from \"./SpeakerData\";\nimport SpeakerDetail from \"./SpeakerDetail\";\nimport { ConfigContext } from \"./App\";\n\nconst Speakers = ({}) => {\n  const [speakingSaturday, setSpeakingSaturday] = useState(true);\n  const [speakingSunday, setSpeakingSunday] = useState(true);\n\n  // const [speakerList, setSpeakerList] = useState([]);\n  const [speakerList, dispatch] = useReducer(speakersReducer, []);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const context = useContext(ConfigContext);\n\n  function speakersReducer(state, action) {\n    function updateFavorite(favoriteValue){\n      return state.map((item, index) => {\n        if(item.id == action.sessionId){\n          item.favorite = favoriteValue\n          return item;\n        }\n      })\n    }\n\n\n    switch (action.type) {\n      case \"setSpeakerList\": {\n        return action.data;\n      }\n      case \"favorite\":\n        return updateFavorite(true);\n      case \"unfavorite\":\n        return updateFavorite(false);\n      default:\n        return state;\n    }\n  }\n\n  useEffect(() => {\n    setIsLoading(true);\n    new Promise(function(resolve) {\n      setTimeout(function() {\n        resolve();\n      }, 1000);\n    }).then(() => {\n      setIsLoading(false);\n      const speakerListServerFilter = SpeakerData.filter(({ sat, sun }) => {\n        return (speakingSaturday && sat) || (speakingSunday && sun);\n      });\n      // setSpeakerList(speakerListServerFilter);\n      dispatch({ type: \"setSpeakerList\", data: speakerListServerFilter });\n    });\n    return () => {\n      console.log(\"cleanup\");\n    };\n  }, []); // [speakingSunday, speakingSaturday]);\n\n  const handleChangeSaturday = () => {\n    setSpeakingSaturday(!speakingSaturday);\n  };\n\n  const speakerListFiltered = isLoading\n    ? []\n    : speakerList\n        .filter(\n          ({ sat, sun }) => (speakingSaturday && sat) || (speakingSunday && sun)\n        )\n        .sort(function(a, b) {\n          if (a.firstName < b.firstName) {\n            return -1;\n          }\n          if (a.firstName > b.firstName) {\n            return 1;\n          }\n          return 0;\n        });\n\n  const handleChangeSunday = () => {\n    setSpeakingSunday(!speakingSunday);\n  };\n\n  const heartFavoriteHandler = (e, favoriteValue) => {\n    e.preventDefault();\n    debugger;\n    const sessionId = parseInt(e.target.attributes[\"data-sessionid\"].value);\n    setSpeakerList(\n      speakerList.map(item => {\n        if (item.id === sessionId) {\n          item.favorite = favoriteValue;\n          return item;\n        }\n        return item;\n      })\n    );\n    //console.log(\"changing session favorte to \" + favoriteValue);\n  };\n\n  if (isLoading) return <div>Loading...</div>;\n\n  return (\n    <div>\n      <Header />\n      <Menu />\n      <div className=\"container\">\n        <div className=\"btn-toolbar  margintopbottom5 checkbox-bigger\">\n          {context.showSpeakerSpeakingDays === false ? null : (\n            <div className=\"hide\">\n              <div className=\"form-check-inline\">\n                <label className=\"form-check-label\">\n                  <input\n                    type=\"checkbox\"\n                    className=\"form-check-input\"\n                    onChange={handleChangeSaturday}\n                    checked={speakingSaturday}\n                  />\n                  Saturday Speakers\n                </label>\n              </div>\n              <div className=\"form-check-inline\">\n                <label className=\"form-check-label\">\n                  <input\n                    type=\"checkbox\"\n                    className=\"form-check-input\"\n                    onChange={handleChangeSunday}\n                    checked={speakingSunday}\n                  />\n                  Sunday Speakers\n                </label>\n              </div>\n            </div>\n          )}\n        </div>\n        <div className=\"row\">\n          <div className=\"card-deck\">\n            {speakerListFiltered.map(\n              ({ id, firstName, lastName, bio, favorite }) => {\n                return (\n                  <SpeakerDetail\n                    key={id}\n                    id={id}\n                    favorite={favorite}\n                    onHeartFavoriteHandler={heartFavoriteHandler}\n                    firstName={firstName}\n                    lastName={lastName}\n                    bio={bio}\n                  />\n                );\n              }\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Speakers;\n"]},"metadata":{},"sourceType":"module"}