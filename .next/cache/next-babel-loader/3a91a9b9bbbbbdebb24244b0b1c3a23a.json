{"ast":null,"code":"var _jsxFileName = \"/Users/ronaldmutebi/Desktop/Desktop/bench/react-hooks/src/ImageToggleOnScroll.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, useRef } from \"react\";\n\nconst ImageToggleOnScroll = ({\n  primaryImg,\n  secondaryImg\n}) => {\n  const imageRef = useRef(null);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(true);\n  useEffect(() => {\n    window.addEventListener(\"scroll\", scrollHandler);\n    setInView(() => {\n      return isInView();\n    });\n    setIsLoading(false);\n    return () => {\n      window.removeEventListener(\"scroll\", scrollHandler);\n    };\n  });\n  const {\n    0: inView,\n    1: setInView\n  } = useState(false);\n\n  const isInView = () => {\n    if (imageRef.current) {\n      const rect = imageRef.current.getBoundingClientRect();\n      return rect.top >= 0 && rect.bottom <= window.innerHeight;\n    }\n\n    return false;\n  };\n\n  const scrollHandler = () => {\n    setInView(() => {\n      return isInView();\n    });\n  };\n\n  return isLoading ? null : __jsx(\"img\", {\n    src: inView ? secondaryImg : primaryImg,\n    alt: \"\",\n    style: {\n      width: \"200\",\n      height: \"200px\"\n    },\n    ref: imageRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  });\n};\n\nexport default ImageToggleOnScroll;","map":{"version":3,"sources":["/Users/ronaldmutebi/Desktop/Desktop/bench/react-hooks/src/ImageToggleOnScroll.js"],"names":["React","useEffect","useState","useRef","ImageToggleOnScroll","primaryImg","secondaryImg","imageRef","isLoading","setIsLoading","window","addEventListener","scrollHandler","setInView","isInView","removeEventListener","inView","current","rect","getBoundingClientRect","top","bottom","innerHeight","width","height"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;;AAEA,MAAMC,mBAAmB,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAD,KAAkC;AAC5D,QAAMC,QAAQ,GAAGJ,MAAM,CAAC,IAAD,CAAvB;AACA,QAAM;AAAA,OAACK,SAAD;AAAA,OAAYC;AAAZ,MAA4BP,QAAQ,CAAC,IAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCC,aAAlC;AACAC,IAAAA,SAAS,CAAC,MAAM;AACd,aAAOC,QAAQ,EAAf;AACD,KAFQ,CAAT;AAGAL,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACA,WAAO,MAAM;AACXC,MAAAA,MAAM,CAACK,mBAAP,CAA2B,QAA3B,EAAqCH,aAArC;AACD,KAFD;AAGD,GATQ,CAAT;AAWA,QAAM;AAAA,OAACI,MAAD;AAAA,OAASH;AAAT,MAAsBX,QAAQ,CAAC,KAAD,CAApC;;AAEA,QAAMY,QAAQ,GAAG,MAAM;AACrB,QAAIP,QAAQ,CAACU,OAAb,EAAsB;AACpB,YAAMC,IAAI,GAAGX,QAAQ,CAACU,OAAT,CAAiBE,qBAAjB,EAAb;AACA,aAAOD,IAAI,CAACE,GAAL,IAAY,CAAZ,IAAiBF,IAAI,CAACG,MAAL,IAAeX,MAAM,CAACY,WAA9C;AACD;;AACD,WAAO,KAAP;AACD,GAND;;AAQA,QAAMV,aAAa,GAAG,MAAM;AAC1BC,IAAAA,SAAS,CAAC,MAAM;AACd,aAAOC,QAAQ,EAAf;AACD,KAFQ,CAAT;AAGD,GAJD;;AAKA,SAAON,SAAS,GAAE,IAAF,GACd;AACE,IAAA,GAAG,EAAEQ,MAAM,GAAGV,YAAH,GAAkBD,UAD/B;AAEE,IAAA,GAAG,EAAC,EAFN;AAGE,IAAA,KAAK,EAAE;AAAEkB,MAAAA,KAAK,EAAC,KAAR;AAAeC,MAAAA,MAAM,EAAE;AAAvB,KAHT;AAIE,IAAA,GAAG,EAAEjB,QAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAQD,CAtCD;;AAwCA,eAAeH,mBAAf","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\n\nconst ImageToggleOnScroll = ({ primaryImg, secondaryImg }) => {\n  const imageRef = useRef(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", scrollHandler);\n    setInView(() => {\n      return isInView();\n    });\n    setIsLoading(false);\n    return () => {\n      window.removeEventListener(\"scroll\", scrollHandler);\n    };\n  });\n\n  const [inView, setInView] = useState(false);\n\n  const isInView = () => {\n    if (imageRef.current) {\n      const rect = imageRef.current.getBoundingClientRect();\n      return rect.top >= 0 && rect.bottom <= window.innerHeight;\n    }\n    return false;\n  };\n\n  const scrollHandler = () => {\n    setInView(() => {\n      return isInView();\n    });\n  };\n  return isLoading? null :(\n    <img\n      src={inView ? secondaryImg : primaryImg}\n      alt=\"\"\n      style={{ width:\"200\", height: \"200px\" }}\n      ref={imageRef}\n    />\n  );\n};\n\nexport default ImageToggleOnScroll;\n"]},"metadata":{},"sourceType":"module"}