{"ast":null,"code":"var _jsxFileName = \"/Users/ronaldmutebi/Desktop/Desktop/bench/react-hooks-trials/src/SpeakerDetail.js\";\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport ImageToggleOnScroll from \"./ImageToggleOnScroll\";\nimport { ConfigContext } from './App';\nconst SpeakerDetail = React.memo(({\n  //with React.memo(), the functiontn compnent will only render when its props have changed.//added after useMemo\n  id,\n  firstName,\n  lastName,\n  favorite,\n  bio,\n  onHeartFavoriteHandler\n}) => {\n  // console.log(`SpeakerDetail:${id} ${firstName} ${lastName} ${favorite}`);\n  return __jsx(\"div\", {\n    className: \"card col-4 cardmin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, __jsx(ImageToggleOnScroll, {\n    className: \"card-img-top\",\n    primaryImg: `/static/speakers/bw/Speaker-${id}.jpg`,\n    secondaryImg: `/static/speakers/Speaker-${id}.jpg`,\n    alt: \"{firstName} {lastName}\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"card-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, __jsx(\"h4\", {\n    className: \"card-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, context.loggedInUserEmail ? __jsx(\"button\", {\n    \"data-sessionid\": id,\n    className: favorite ? \"heartredbutton\" : \"heartdarkbutton\",\n    onClick: e => {\n      onHeartFavoriteHandler(e, !favorite);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }) : null, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, firstName, \" \", lastName)), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, bio)));\n});\nexport default SpeakerDetail;","map":{"version":3,"sources":["/Users/ronaldmutebi/Desktop/Desktop/bench/react-hooks-trials/src/SpeakerDetail.js"],"names":["React","useContext","ImageToggleOnScroll","ConfigContext","SpeakerDetail","memo","id","firstName","lastName","favorite","bio","onHeartFavoriteHandler","context","loggedInUserEmail","e"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,SAASC,aAAT,QAA8B,OAA9B;AAIA,MAAMC,aAAa,GAAGJ,KAAK,CAACK,IAAN,CAAW,CAAC;AAAE;AACTC,EAAAA,EADO;AAEPC,EAAAA,SAFO;AAGPC,EAAAA,QAHO;AAIPC,EAAAA,QAJO;AAKPC,EAAAA,GALO;AAMPC,EAAAA;AANO,CAAD,KAOJ;AACzB;AAEA,SACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,mBAAD;AACI,IAAA,SAAS,EAAC,cADd;AAEI,IAAA,UAAU,EAAG,+BAA8BL,EAAG,MAFlD;AAGI,IAAA,YAAY,EAAG,4BAA2BA,EAAG,MAHjD;AAII,IAAA,GAAG,EAAC,wBAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAOI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKM,OAAO,CAACC,iBAAR,GACD;AACI,sBAAgBP,EADpB;AAEI,IAAA,SAAS,EAAEG,QAAQ,GAAG,gBAAH,GAAsB,iBAF7C;AAGI,IAAA,OAAO,EAAEK,CAAC,IAAI;AACVH,MAAAA,sBAAsB,CAACG,CAAD,EAAI,CAACL,QAAL,CAAtB;AACH,KALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADC,GAQE,IATP,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACPF,SADO,OACKC,QADL,CAVJ,CADJ,EAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOE,GAAP,CAhBJ,CAPJ,CADJ;AA4BH,CAtCqB,CAAtB;AAyCA,eAAeN,aAAf","sourcesContent":["import React, { useContext } from 'react';\nimport ImageToggleOnScroll from \"./ImageToggleOnScroll\";\nimport { ConfigContext } from './App'\n\n\n\nconst SpeakerDetail = React.memo(({ //with React.memo(), the functiontn compnent will only render when its props have changed.//added after useMemo\n                           id,\n                           firstName,\n                           lastName,\n                           favorite,\n                           bio,\n                           onHeartFavoriteHandler\n                       }) => {\n    // console.log(`SpeakerDetail:${id} ${firstName} ${lastName} ${favorite}`);\n\n    return (\n        <div className=\"card col-4 cardmin\">\n            <ImageToggleOnScroll\n                className=\"card-img-top\"\n                primaryImg={`/static/speakers/bw/Speaker-${id}.jpg`}\n                secondaryImg={`/static/speakers/Speaker-${id}.jpg`}\n                alt=\"{firstName} {lastName}\"\n            />\n            <div className=\"card-body\">\n                <h4 className=\"card-title\">\n                    {context.loggedInUserEmail ? (\n                    <button\n                        data-sessionid={id}\n                        className={favorite ? \"heartredbutton\" : \"heartdarkbutton\"}\n                        onClick={e => {\n                            onHeartFavoriteHandler(e, !favorite);\n                        }}\n                    />\n                    ): null }\n                    <span>\n            {firstName} {lastName}\n          </span>\n                </h4>\n\n                <span>{bio}</span>\n            </div>\n        </div>\n    );\n}\n);\n\nexport default SpeakerDetail;\n"]},"metadata":{},"sourceType":"module"}